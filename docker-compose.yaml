version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # Add SSL certificates when ready
      # - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - webnet
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  backend:
    image: libwebservicesmu/chatbot-app-backend:latest
    # Remove port exposure - nginx will handle routing
    expose:
      - '3000'
    env_file:
      - .env
    deploy:
      # Number of parallel, scalable containers running in a service
      replicas: 3
      update_config:
        parallelism: 2
        delay: 10s
        failure_action: rollback
      # If a container fails, restart a new one
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    # Use wget instead of curl (more likely to be available)
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - webnet

  frontend:
    image: libwebservicesmu/chatbot-app-frontend:latest
    # Remove port exposure - nginx will handle routing
    expose:
      - '5173'
    env_file:
      - .env
    deploy:
      replicas: 3
      update_config:
        parallelism: 2
        delay: 10s
        failure_action: rollback
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    # Simple HTTP check for frontend
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - webnet
    depends_on:
      - backend

networks:
  webnet:
    driver: overlay
    attachable: true
